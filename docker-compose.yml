
volumes:
  app-db-data:

networks:
  internal_network:

x-environment: &default-environment
  ENVIRONMENT:
  ### Logs:
  LOG_LEVEL:
  LOGGING_EXCHANGE:
  LOG_QUEUE:
  RECEIVER_ID:
  HANDLER_ID:
  USERAPI_ID:
  ### Queue:
  RABBITMQ_DNS:
  RABBITMQ_PORT:
  RABBITMQ_USER:
  RABBITMQ_PASSWORD:

x-common-environment-receiver-handler: &receiver_handler
    HANDLER_EXCHANGE:
    MESSAGES_QUEUE:

x-common-environment-userapi-receiver: &userapi_receiver
    PROJECT_NAME:
    DOMAIN:
    SECRET_KEY:

x-common-environment-userapi_handler: &userapi_handler
    RPC_QUEUE:
    ### Superuser
    FIRST_SUPERUSER_EMAIL:
    FIRST_SUPERUSERNAME:
    FIRST_SUPERUSER_PASSWORD:
    ### DB
    POSTGRES_SERVER: db
    POSTGRES_PORT:
    POSTGRES_USER:
    POSTGRES_PASSWORD:
    POSTGRES_DB:


services:
  db:
    image: postgres:12 # Change to slim
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
  
  adminer:
    image: adminer
    networks:
      - internal_network
      - default
    ports:
      - "8080:8080"
    depends_on:
      - db
    # environment:
      # - ADMINER_DESIGN=pepa-linha-dark

  rabbitmq:
    image: rabbitmq:3.13-management
    restart: always
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 15s
      retries: 15

  logging:
    build: 
      context: ./logging
      args:
        ENVIRONMENT:
        LOG_INFO_LOCAL_PATH:
    networks:
      - internal_network
    environment: 
      << : [*default-environment]
      LOG_INFO_LOCAL_PATH:
      LOG_FILE_MAX_SIZE:
      LOG_FILE_BACKUP_COUNT:
    depends_on:
      rabbitmq:
        condition: service_healthy
        restart: true
    volumes:
      - ./logs/:${LOG_INFO_LOCAL_PATH}
  
  userapi:
    build: 
      context: ./user_api
      args:
        ENVIRONMENT:
    networks:
      - default
      - internal_network
    ports:
      - "8000:8000"
    environment:
      <<: [*default-environment, *userapi_handler, *userapi_receiver]
      API_V1_STR:
      VERSION:
      USERS_OPEN_REGISTRATION:
      #Emails:
      SMTP_TLS:
      SMTP_SSL:
      SMTP_PORT:
      SMTP_HOST:
      SMTP_USER:
      SMTP_PASSWORD:
      EMAILS_FROM_EMAIL:
      EMAILS_FROM_NAME:
    depends_on:
      rabbitmq:
        condition: service_healthy
        restart: true
      db:
        condition: service_started
    
  receiver:
    build: 
      context: ./receiver
      args:
        ENVIRONMENT:
    networks:
      - default
      - internal_network
    ports:
      - "8100:8000"
    environment:
      <<: [*default-environment, *userapi_receiver, *receiver_handler]
      RECEIVER_API_V1_STR:
      RECEIVER_VERSION:
    depends_on:
      rabbitmq:
        condition: service_healthy
        restart: true
  
  handler:
    build: 
      context: ./handler
      args:
        ENVIRONMENT:
    networks:
      - default
      - internal_network
    environment:
      <<: [*default-environment, *userapi_handler, *receiver_handler]
    depends_on:
      rabbitmq:
        condition: service_healthy
        restart: true
      db:
        condition: service_started
