
volumes:
  app-db-data:

networks:
  internal_network:

services:

  db:
    image: postgres:12
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER?Variable not set}"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 3
  
  adminer:
    image: adminer
    networks:
      - internal_network
      - default
    ports:
      - "5433:5433"
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
      # - ADMINER_DEFAULT_SERVER=localhost
  
  rabbitmq:
    image: rabbitmq:3.13-management
    restart: always
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 3

  logging:
    build: ./logging
    networks:
      - internal_network
    environment:
      - LOG_INFO_LOCAL_PATH=${LOG_INFO_LOCAL_PATH}
    depends_on:
      rabbitmq:
        condition: service_healthy
        restart: true
    volumes:
      - ./logs/:${LOG_INFO_LOCAL_PATH}
  
  # user-api:
  #   build: ./user-api
  #   networks:
  #     - internal_network
  #   # depends_on:
  #   #   db:
  #   #     condition: service_healthy
  #   #     restart: true
  






