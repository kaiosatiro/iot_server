name: Test
on: [pull_request, workflow_call]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      
      - name: Create env file
        id: create-env
        run: |
          echo ENV=${{ vars.ENV }} > .env
          echo LOG_INFO_LOCAL_PATH=${{ vars.LOG_INFO_LOCAL_PATH }} >> .env
          echo POSTGRES_PORT=${{ vars.POSTGRES_PORT }} > .env
          echo POSTGRES_USER=${{ vars.POSTGRES_USER }} > .env
          echo POSTGRES_PASSWORD=${{ vars.POSTGRES_PASSWORD }} > .env
          echo POSTGRES_DB=${{ vars.POSTGRES_DB }} > .env
          echo FIRST_SUPERUSER_NAME=${{ vars.FIRST_SUPERUSER_NAME }} > .env
          echo FIRST_SUPERUSER_EMAIL=${{ vars.FIRST_SUPERUSER_EMAIL }} > .env
          echo FIRST_SUPERUSER_PASSWORD=${{ vars.FIRST_SUPERUSER_PASSWORD }} > .env
          echo PROJECT_NAME=${{ vars.PROJECT_NAME }} > .env
      
      - name: Build and run
        run: |
          make compose-dev-d
      # Test services
      - name: Tests - Logging service
        run: |
          docker compose exec -T logging bash tests-start.sh

      - name: Tests - UserAPI service
        run: |
          docker compose exec -T userapi bash tests-start.sh
      
      # Cleanup
      - name: Cleanup
        run: |
          make compose-down-dev

  # # https://github.com/marketplace/actions/alls-green#why
  # alls-green:  # This job does nothing and is only used for the branch protection
  #   if: always()
  #   needs:
  #     - test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Decide whether the needed jobs succeeded or failed
  #       uses: re-actors/alls-green@release/v1
  #       with:
  #         jobs: ${{ toJSON(needs) }}
