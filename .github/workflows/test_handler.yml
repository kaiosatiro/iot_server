name: Test Handler
on: [workflow_call]

jobs:
  handler-tests:
    runs-on: ubuntu-latest
    environment: Test
    env:
      ENVIRONMENT: ${{ vars.ENVIRONMENT }}
      LOG_LEVEL: ${{ vars.LOG_LEVEL }}

      LOGGING_EXCHANGE: ${{ vars.LOGGING_EXCHANGE }}
      LOG_QUEUE: ${{ vars.LOG_QUEUE }}
      HANDLER_ID: ${{ vars.HANDLER_ID }}

      RABBITMQ_DNS: ${{ vars.RABBITMQ_DNS }}

      HANDLER_EXCHANGE: ${{ vars.HANDLER_EXCHANGE }}
      MESSAGES_QUEUE: ${{ vars.HANDLER_EXCHANGE }}
      RPC_QUEUE: ${{ vars.RPC_QUEUE }}

      POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}

      # Need the user api for db migrations
      USERAPI_ID: ${{ vars.USERAPI_ID }}
      FIRST_SUPERUSERNAME: ${{ vars.FIRST_SUPERUSERNAME }}
      FIRST_SUPERUSER_EMAIL: ${{ vars.FIRST_SUPERUSER_EMAIL }}
      FIRST_SUPERUSER_PASSWORD: ${{ vars.FIRST_SUPERUSER_PASSWORD }}
      USERS_OPEN_REGISTRATION: ${{ vars.USERS_OPEN_REGISTRATION }}
      EMAILS_FROM_EMAIL: ${{ vars.EMAILS_FROM_EMAIL }}

      LOG_INFO_LOCAL_PATH: ${{ vars.LOG_INFO_LOCAL_PATH }} # Need to add this so compose wont fail to bind volume

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create env file
        id: create-env
        run: |
          echo ENVIRONMENT=$ENVIRONMENT >> .env
          echo LOG_LEVEL=$LOG_LEVEL >> .env
          echo LOGGING_EXCHANGE=$LOGGING_EXCHANGE >> .env
          echo LOG_QUEUE=$LOG_QUEUE >> .env
          echo HANDLER_ID=$HANDLER_ID >> .env
          echo RABBITMQ_DNS=$RABBITMQ_DNS >> .env
          echo HANDLER_EXCHANGE=$HANDLER_EXCHANGE >> .env
          echo MESSAGES_QUEUE=$MESSAGES_QUEUE >> .env
          echo POSTGRES_PORT=$POSTGRES_PORT >> .env
          echo POSTGRES_USER=$POSTGRES_USER >> .env
          echo POSTGRES_PASSWORD=$POSTGRES_PASSWORD >> .env
          echo POSTGRES_DB=$POSTGRES_DB >> .env
          echo FIRST_SUPERUSERNAME=$FIRST_SUPERUSERNAME >> .env
          echo FIRST_SUPERUSER_EMAIL=$FIRST_SUPERUSER_EMAIL >> .env
          echo FIRST_SUPERUSER_PASSWORD=$FIRST_SUPERUSER_PASSWORD >> .env
          echo USERS_OPEN_REGISTRATION=$USERS_OPEN_REGISTRATION >> .env
          echo EMAILS_FROM_EMAIL=$EMAILS_FROM_EMAIL >> .env
          echo LOG_INFO_LOCAL_PATH=$LOG_INFO_LOCAL_PATH >> .env

      - name: Tests - Handler services
      # Need the user api for db migrations
        run: |
          make compose-dev-d s="rabbitmq db userapi handler"
          docker compose exec -T handler bash tests-start.sh

      # Cleanup
      - name: Cleanup
        run: |
          make compose-down-dev

